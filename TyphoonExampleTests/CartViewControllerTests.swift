//
//  CartViewControllerTests.swift
//  TyphoonExample
//
//  Created by Valerio Ferrucci on 30/07/18.
//  Copyright (c) 2018 Valerio Ferrucci. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import TyphoonExample
import XCTest

class CartViewControllerTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: CartViewController!
  var window: UIWindow!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    window = UIWindow()
    setupCartViewController()
  }
  
  override func tearDown()
  {
    window = nil
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupCartViewController()
  {
    let bundle = Bundle.main
    let storyboard = UIStoryboard(name: "Cart", bundle: bundle)
    sut = storyboard.instantiateViewController(withIdentifier: "CartViewController") as! CartViewController
  }
  
  func loadView()
  {
    window.addSubview(sut.view)
    RunLoop.current.run(until: Date())
  }
  
  // MARK: Test doubles
  
  class CartBusinessLogicSpy: CartBusinessLogic
  {
    func loadCurrenCart(request: CartModels.CurrentCart.Request) {
        loadCurrenCartCalled = true
    }
    
    var loadCurrenCartCalled = false
    
  }
  
  // MARK: Tests
  
  func testShouldLoadCurrentCartWhenViewIsLoaded()
  {
    // Given
    let spy = CartBusinessLogicSpy()
    sut.interactor = spy
    
    // When
    loadView()
    
    // Then
    XCTAssertTrue(spy.loadCurrenCartCalled, "viewDidLoad() should ask the interactor to do loadCurrenCart")
  }
  
  func testDisplayCurrentCart()
  {
    // Given
    let displayedCart = CartModels.CurrentCart.ViewModel.DisplayedCart(id: "1", created: "1/1/2018")
    let viewModel = CartModels.CurrentCart.ViewModel(displayedCart: displayedCart)
    
    // When
    loadView()
    sut.displayCart(viewModel: viewModel)
    
    // Then
    XCTAssertEqual(sut.cartDateLbl.text, "1/1/2018", "displaySomething(viewModel:) should update the name text field")
  }
}
